<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://kosalanuwan.github.io/journal/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kosalanuwan.github.io/journal/" rel="alternate" type="text/html" /><updated>2020-12-27T05:14:09+00:00</updated><id>https://kosalanuwan.github.io/journal/feed.xml</id><title type="html">journal</title><subtitle>@kosalanuwan's journal entries. I blog about tech, code, culture, and above all, the open web. The design and the source for this site are not publicly available.</subtitle><entry><title type="html">Writing a JS utility library</title><link href="https://kosalanuwan.github.io/journal/vanilla-js/js-utility-library" rel="alternate" type="text/html" title="Writing a JS utility library" /><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><id>https://kosalanuwan.github.io/journal/vanilla-js/js-utility-library</id><content type="html" xml:base="https://kosalanuwan.github.io/journal/vanilla-js/js-utility-library">&lt;p&gt;Remember the stuff we picked up &lt;a href=&quot;/journal/dom-manipulation-library/&quot;&gt;writing a stripped-down version of jQuery?&lt;/a&gt; Think of this as a stripped-down version of lodash, a mix and match of a few helper methods from utility libraries, then bundled together into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;global&lt;/code&gt; namespace as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/topics/utilities?l=javascript&amp;amp;o=desc&amp;amp;s=stars&quot;&gt;It was a real hail mary&lt;/a&gt;, but the code isn’t complicated as other huge JS libraries like angular or babel. &lt;a href=&quot;#references&quot;&gt;A couple of days and a 3-4 utility libraries on GitHub later&lt;/a&gt;, I was able to pulled togher my own utility belt library.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kosalanuwan/vanilla-js-snippets/#readme&quot;&gt;Here’s the complete source code on GitHub.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;examples-in-use&quot;&gt;Examples in use:&lt;/h3&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/**
 * Use as typical '_' utility functions
 */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello {0}!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kebabCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Some teXt to Kebab case&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isblank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * Or, do the same with chaining and prototype option
 */&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello {0}!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Some teXt to Kebab case&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toKebabCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isblank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://code-examples.net/en/q/26ad93#answer3&quot;&gt;You’d be amaze how tricky it is to enable both function and prototype options&lt;/a&gt;. And for that, I &lt;strong&gt;do&lt;/strong&gt; dig into &lt;a href=&quot;https://github.com/esamattis/underscore.string/blob/master/index.js#L105-L140&quot;&gt;underscore-string utility library in order to pull out what is needed&lt;/a&gt; :sunglasses:!&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;references&quot;&gt;References:&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Ferdinandi, C. (2019). &lt;a href=&quot;https://gomakethings.com/why-do-people-choose-frameworks-over-vanilla-js/&quot;&gt;Why do people choose frameworks over vanilla javascript?&lt;/a&gt; [Blog] &lt;em&gt;Go make things&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;@esamattis. (2018). &lt;a href=&quot;https://github.com/esamattis/underscore.string&quot;&gt;&lt;em&gt;Underscore.string&lt;/em&gt;&lt;/a&gt; [Repo].&lt;/li&gt;
  &lt;li&gt;@jashkenas. (2010). &lt;a href=&quot;https://github.com/jashkenas/underscore&quot;&gt;&lt;em&gt;Underscore&lt;/em&gt;&lt;/a&gt; [Repo].&lt;/li&gt;
  &lt;li&gt;@lodash. (2010). &lt;a href=&quot;https://github.com/lodash/lodash&quot;&gt;&lt;em&gt;Lodash&lt;/em&gt;&lt;/a&gt; [Repo].&lt;/li&gt;
  &lt;li&gt;@angular. (2012). &lt;a href=&quot;https://github.com/angular/angular.js&quot;&gt;&lt;em&gt;Angular.js&lt;/em&gt;&lt;/a&gt; [Repo].&lt;/li&gt;
  &lt;li&gt;All things javascript, LLC. (2020, Jan 23). &lt;a href=&quot;https://www.youtube.com/playlist?list=PLTo9PCskHpbGaCR6vjk1q4ohcEm8cBtzN&quot;&gt;&lt;em&gt;Javascript prototypes&lt;/em&gt;&lt;/a&gt; [Video playlist].&lt;/li&gt;
  &lt;li&gt;Osmani, A. (2012). &lt;a href=&quot;https://www.oreilly.com/library/view/learning-javascript-design/9781449334840/ch13s15.html&quot;&gt;“Javascript namespace fundamentals” in &lt;em&gt;Learning javascript design patterns&lt;/em&gt;&lt;/a&gt;. O’Reilly, ch. 13.&lt;/li&gt;
  &lt;li&gt;Chaudhary, V. (2016). &lt;a href=&quot;https://www.dotnetforall.com/namespace-scoping-javascript/&quot;&gt;Learning javascript namspaces and scoping&lt;/a&gt; [Blog] &lt;em&gt;Dot net for all&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Ferdinandi, C. (no date). &lt;a href=&quot;https://leanweb.dev/ebook/lean-web-principles/&quot;&gt;&lt;em&gt;Lean Web Principles - The new best practices for simpler, faster websites&lt;/em&gt;&lt;/a&gt; [E-book]. The lean web.&lt;/li&gt;
  &lt;li&gt;DevDelight. (2019, Aug 9). &lt;a href=&quot;https://www.youtube.com/watch?v=_VB5hrB5CsI&quot;&gt;&lt;em&gt;Javascript style guide for beginners&lt;/em&gt;&lt;/a&gt; [Video].&lt;/li&gt;
  &lt;li&gt;Mazzarri, M. (2014). &lt;a href=&quot;https://milmazz.uno/article/2014/08/27/how-to-document-your-javascript-code/&quot;&gt;How to document your javascript code&lt;/a&gt; [Blog] &lt;em&gt;Milmazz blog&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Traversy Media. (2019). &lt;a href=&quot;https://www.youtube.com/watch?v=YK-GurROGIg&quot;&gt;&lt;em&gt;Documenting your javascript with JSDoc - Crash course&lt;/em&gt;&lt;/a&gt; [Video].&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="vanilla-js" /></entry><entry><title type="html">Writing a DOM manipulation library</title><link href="https://kosalanuwan.github.io/journal/vanilla-js/dom-manipulation-library/" rel="alternate" type="text/html" title="Writing a DOM manipulation library" /><published>2020-08-12T00:00:00+00:00</published><updated>2020-08-12T00:00:00+00:00</updated><id>https://kosalanuwan.github.io/journal/vanilla-js/dom-manipulation-library</id><content type="html" xml:base="https://kosalanuwan.github.io/journal/vanilla-js/dom-manipulation-library/">&lt;p&gt;I’d prefer to write my own code for DOM manipulation. Think of it as a stripped-down version of JS libraries like jQuery. I’m not going to write yet another jQuery library but I like the idea of having my own logic to manipulate the DOM, say, a mix and match of native browser API calls.&lt;/p&gt;

&lt;h3 id=&quot;examples-in-use&quot;&gt;Examples in use:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Wire a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;click&lt;/code&gt; event to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag&lt;/p&gt;

    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bodyEl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bodyEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showContentIfRouteLink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Or, do the same with chaining and prototype option&lt;/p&gt;

    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showContentIfRouteLink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first thing we’re going to need is a lot of digging into &lt;a href=&quot;https://github.com/topics/utilities?l=javascript&amp;amp;o=desc&amp;amp;s=stars&quot;&gt;jQuery-like utility libraries&lt;/a&gt;. Fortunately, all of them are opensourced in GitHub so I’m going to have to get all the pieces from individual repos that are in.&lt;/p&gt;

&lt;p&gt;First up is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE pattern&lt;/a&gt;. It encapsulates all my code and runs as soon as it is defined. So a little anonymous function magic code is all that is necessary to get started. Kids’ stuff.&lt;/p&gt;

&lt;p&gt;Next is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Polyfill&quot;&gt;Polyfill pattern&lt;/a&gt;. I can define all the DOM manipulation script required but the browser will pick them up if not natively supported. &lt;a href=&quot;https://github.com/Financial-Times/polyfill-library&quot;&gt;@Financial-Times/polyfill-library&lt;/a&gt; has plenty of polyfill code snippets. Excellent.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain&quot;&gt;Chaining is a bit tricky&lt;/a&gt;. Not only it requires a Prototype pattern, but you also have to search the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model&quot;&gt;native DOM elements&lt;/a&gt; too. I’m not going to lie, you’d be amazed how difficult it is to find the pieces and if you bind the script to the wrong element, nothing works.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kosalanuwan/vanilla-js-snippets/#readme&quot;&gt;Here’s the complete source code&lt;/a&gt; I pulled together as my own nano-library for DOM manipulation.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;references&quot;&gt;References:&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Ferdinandi, C. (2019). &lt;a href=&quot;https://gomakethings.com/why-do-people-choose-frameworks-over-vanilla-js/&quot;&gt;Why do people choose frameworks over vanilla javascript?&lt;/a&gt; [Blog] &lt;em&gt;Go make things&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;All things javascript, LLC. (2017). &lt;a href=&quot;https://www.youtube.com/watch?v=f-yLYjvPiLE&quot;&gt;&lt;em&gt;Selecting DOM elements with pure javascript&lt;/em&gt;&lt;/a&gt; [Video].&lt;/li&gt;
  &lt;li&gt;Ferdinandi, C. (2017). &lt;a href=&quot;https://gomakethings.com/how-to-show-and-hide-elements-with-vanilla-javascript/&quot;&gt;How to show and hide elements with vanilla javascript&lt;/a&gt; [Blog] &lt;em&gt;Go make things&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;All things javascript, LLC. (2020, Jan 23). &lt;a href=&quot;https://www.youtube.com/playlist?list=PLTo9PCskHpbGaCR6vjk1q4ohcEm8cBtzN&quot;&gt;&lt;em&gt;Javascript prototypes&lt;/em&gt;&lt;/a&gt; [Video playlist].&lt;/li&gt;
  &lt;li&gt;Osmani, A. (2012). &lt;a href=&quot;https://www.oreilly.com/library/view/learning-javascript-design/9781449334840/ch13s15.html&quot;&gt;“Javascript namespace fundamentals” in &lt;em&gt;Learning javascript design patterns&lt;/em&gt;&lt;/a&gt;. O’Reilly, ch. 13.&lt;/li&gt;
  &lt;li&gt;Chaudhary, V. (2016). &lt;a href=&quot;https://www.dotnetforall.com/namespace-scoping-javascript/&quot;&gt;Learning javascript namspaces and scoping&lt;/a&gt; [Blog] &lt;em&gt;Dot net for all&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Ferdinandi, C. (no date). &lt;a href=&quot;https://leanweb.dev/ebook/lean-web-principles/&quot;&gt;&lt;em&gt;Lean Web Principles - The new best practices for simpler, faster websites&lt;/em&gt;&lt;/a&gt; [E-book]. The lean web.&lt;/li&gt;
  &lt;li&gt;DevDelight. (2019, Aug 9). &lt;a href=&quot;https://www.youtube.com/watch?v=_VB5hrB5CsI&quot;&gt;&lt;em&gt;Javascript style guide for beginners&lt;/em&gt;&lt;/a&gt; [Video].&lt;/li&gt;
  &lt;li&gt;@30-seconds. (2018). &lt;a href=&quot;https://github.com/30-seconds/30-seconds-of-code&quot;&gt;&lt;em&gt;30 seconds of code - javascript snippets&lt;/em&gt;&lt;/a&gt; [Repo].&lt;/li&gt;
  &lt;li&gt;Mazzarri, M. (2014). &lt;a href=&quot;https://milmazz.uno/article/2014/08/27/how-to-document-your-javascript-code/&quot;&gt;How to document your javascript code&lt;/a&gt; [Blog] &lt;em&gt;Milmazz blog&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Traversy Media. (2019). &lt;a href=&quot;https://www.youtube.com/watch?v=YK-GurROGIg&quot;&gt;&lt;em&gt;Documenting your javascript with JSDoc - Crash course&lt;/em&gt;&lt;/a&gt; [Video].&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="vanilla-js" /></entry><entry><title type="html">Personal productivity</title><link href="https://kosalanuwan.github.io/journal/personal-notes/personal-productivity/" rel="alternate" type="text/html" title="Personal productivity" /><published>2017-11-05T00:00:00+00:00</published><updated>2017-11-05T00:00:00+00:00</updated><id>https://kosalanuwan.github.io/journal/personal-notes/productivity</id><content type="html" xml:base="https://kosalanuwan.github.io/journal/personal-notes/personal-productivity/">&lt;p&gt;Here’s my &lt;em&gt;deliberate efforts&lt;/em&gt; to keep dancing. These tools and apps are my personal preference and probably might work for you as well. Not going to lie, I may have literally let go of some of these for the preference of my employers and clientele.&lt;/p&gt;

&lt;h3 id=&quot;contents&quot;&gt;Contents&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#notes&quot;&gt;Notes&lt;/a&gt; written in markdown using &lt;a href=&quot;https://&quot;&gt;Paper app&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#task-tracking&quot;&gt;Task tracking&lt;/a&gt; using &lt;a href=&quot;https://github.com/kosalanuwan&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#todo-list&quot;&gt;Todo list&lt;/a&gt; of &lt;em&gt;ahaa moments&lt;/em&gt; using &lt;a href=&quot;https://&quot;&gt;GitHub app&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reminders&quot;&gt;Reminders&lt;/a&gt; are always on a calendar&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#emails&quot;&gt;Emails&lt;/a&gt; are filtered using &lt;a href=&quot;https://&quot;&gt;Outlook rules&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reading&quot;&gt;Reading&lt;/a&gt; as in books are only on &lt;a href=&quot;https://&quot;&gt;Audible app&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#budgets&quot;&gt;Budgets&lt;/a&gt; are planned monthly using &lt;a href=&quot;https://&quot;&gt;Google Keep&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;notes&quot;&gt;Notes&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://kosalanuwan.github.io/journal/hello-world/&quot;&gt;Written in markdown using Paper app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Previously used OneNote, Evernote, Workflowy, Dropbox Paper, and even Notion.&lt;/p&gt;

&lt;h3 id=&quot;task-tracking&quot;&gt;Task tracking&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;GitHub Issues&lt;/a&gt; for task and bug tracking&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;Milestones&lt;/a&gt; for road maps and sprint planning, and&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;Labels&lt;/a&gt; to categorize based on features, bugs, and whatnot&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is to keep a track of todos on various projects. Not meant to plan my daily routines. Previously used Trello, Todoist, and even Asana.&lt;/p&gt;

&lt;h3 id=&quot;todo-list&quot;&gt;Todo list&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;:lock: &lt;a href=&quot;https://github.com/kosalanuwan/todo-list/#readme&quot;&gt;Todos repository on GitHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;GitHub Issues&lt;/a&gt; for each todo item&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It seems like a pretty fantastic idea in lieu of traditional Trello, Todoist, Microsoft Todo, Google Keep, and the like. You want to try out &lt;a href=&quot;https://&quot;&gt;GitHub app on the mobile&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;reminders&quot;&gt;Reminders&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://calendar.google.com&quot;&gt;Google Calendar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Previously tried Workflowy, Microsoft Todo, Trello, but it has always been a &lt;em&gt;calendar&lt;/em&gt; when scheduling meetings, appointments, reminders et al. whether it’s personal or work.&lt;/p&gt;

&lt;h3 id=&quot;emails&quot;&gt;Emails&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;Microsoft Outlook Rules&lt;/a&gt; to filter and process emails and meeting invites&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You want to have a look at &lt;a href=&quot;https://www.hanselman.com/blog/TheThreeMostImportantOutlookRulesForProcessingMail.aspx&quot;&gt;Scott Hanselman’s article on Outlook rules for processing emails&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;reading&quot;&gt;Reading&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Audio books purchased from &lt;a href=&quot;http://&quot;&gt;Audible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Listens using &lt;a href=&quot;https://&quot;&gt;Audible app&lt;/a&gt; while on the go&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Credit goes to former colleague and a dear friend, &lt;a href=&quot;https://github.com/hasith&quot;&gt;@hasith&lt;/a&gt;, for showing how to keep up using Audible. I’m a snail-paced reader, still reads a chapter or two occasionally &lt;a href=&quot;/books/&quot;&gt;to get inspiration for fiction writing&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;budgets&quot;&gt;Budgets&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;Google Keep&lt;/a&gt; as a simple list of expenses with the budgeted amount&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Previously tried many apps and even spreadsheets but that doesn’t seemed to work consistently for not more than a few months.&lt;/p&gt;</content><author><name></name></author><category term="personal-notes" /></entry><entry><title type="html">Hello world :wave:</title><link href="https://kosalanuwan.github.io/journal/personal-notes/hello-world/" rel="alternate" type="text/html" title="Hello world :wave:" /><published>1991-07-17T00:00:00+00:00</published><updated>1991-07-17T00:00:00+00:00</updated><id>https://kosalanuwan.github.io/journal/personal-notes/hello-world</id><content type="html" xml:base="https://kosalanuwan.github.io/journal/personal-notes/hello-world/">&lt;p&gt;GitHub used to be my unicorn and now it is &lt;strong&gt;&lt;em&gt;my bitch&lt;/em&gt;&lt;/strong&gt;. I interact with GitHub daily, so why not use it for live journal? It makes more sense, at least for me. I’m that nerd :nerd_face:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kosalanuwan&quot;&gt;&lt;img src=&quot;http://ghchart.rshah.org/BF0000/kosalanuwan&quot; alt=&quot;Kosala Nuwan's GitHub contributions&quot; width=&quot;100%&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The truth is I have tried out all those widespread of notes taking apps from Evernote to Onenote, Workflowy, Trello, Todoist, and even Notion. For the record they all seemed great but this is just my personal preference.&lt;/p&gt;

&lt;p&gt;In case you were wondeirng, this entire site is:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Originally, a flavor of &lt;a href=&quot;https://github.com/kosalanuwan/gh-site-otto-theme/#readme&quot;&gt;the Otto theme&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Built and published with &lt;a href=&quot;https://github.com/peaceiris/actions-gh-pages&quot;&gt;GitHub Pages Actions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Hosted on &lt;a href=&quot;https://github.com/kosalanuwan/journal&quot;&gt;GitHub Pages&lt;/a&gt;, and&lt;/li&gt;
  &lt;li&gt;Developed with &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VS Code&lt;/a&gt; using &lt;a href=&quot;https://github.com/kosalanuwan/devcontainers&quot;&gt;developer container for Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, this article amongst rest are written in &lt;a href=&quot;https://&quot;&gt;Markdown&lt;/a&gt; with &lt;a href=&quot;https://&quot;&gt;Paper app&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="personal-notes" /></entry></feed>